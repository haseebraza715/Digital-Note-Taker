{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function NoteForm(_ref){let{addNote,updateNote,selectedNote}=_ref;const[title,setTitle]=useState(selectedNote?selectedNote.title:\"\");const[content,setContent]=useState(selectedNote?selectedNote.content:\"\");const[tags,setTags]=useState(selectedNote?selectedNote.tags:\"\");const[loading,setLoading]=useState(false);// Loading state\nconst[success,setSuccess]=useState(\"\");// Success message state\nconst[error,setError]=useState(\"\");// Error message state\nuseEffect(()=>{if(selectedNote){setTitle(selectedNote.title);setContent(selectedNote.content);setTags(selectedNote.tags.join(\", \"));}else{resetForm();}},[selectedNote]);const handleTitleChange=e=>{if(e.target.value.length<=50)setTitle(e.target.value);// Limit to 50 characters\n};const handleContentChange=e=>{if(e.target.value.length<=200)setContent(e.target.value);// Limit to 200 characters\n};const resetForm=()=>{setTitle(\"\");setContent(\"\");setTags(\"\");};useEffect(()=>{const formData={title,content,tags};localStorage.setItem(\"noteData\",JSON.stringify(formData));},[title,content,tags]);// Load from local storage on mount\nuseEffect(()=>{const savedData=JSON.parse(localStorage.getItem(\"noteData\"));if(savedData){setTitle(savedData.title);setContent(savedData.content);setTags(savedData.tags);}},[]);const handleSubmit=async e=>{e.preventDefault();// Validation: Check if title is empty\nif(!title.trim()){setError(\"Title cannot be empty!\");return;}// Validation: Check if tags contain only letters and numbers\nconst tagsArray=tags.split(\",\").map(tag=>tag.trim());if(tagsArray.some(tag=>!/^[a-zA-Z0-9]+$/.test(tag))){setError(\"Tags must contain only letters and numbers.\");return;}setError(\"\");// Clear any previous error messages\nsetLoading(true);// Start loading state\nconst noteData={title,content,tags:tagsArray};try{if(selectedNote){await updateNote(selectedNote._id,noteData);// Assume updateNote returns a promise\nsetSuccess(\"Note updated successfully!\");}else{await addNote(noteData);// Assume addNote returns a promise\nsetSuccess(\"Note added successfully!\");}}catch(err){setError(\"Failed to save the note. Please try again.\");// Error handling\n}finally{setLoading(false);// Stop loading state\nsetTimeout(()=>setSuccess(\"\"),3000);// Clear success message after 3 seconds\nresetForm();// Clear form\n}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"note-form\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"form-title\",children:selectedNote?\"Edit Note\":\"Add Note\"}),success&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:success}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",className:\"input-label\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{id:\"title\",type:\"text\",placeholder:\"Title\",value:title,onChange:e=>setTitle(e.target.value),maxLength:50,className:\"input-field\"}),/*#__PURE__*/_jsxs(\"small\",{className:\"char-counter\",children:[title.length,\"/50\"]}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"content\",className:\"input-label\",children:\"Content\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"content\",placeholder:\"Content\",value:content,onChange:e=>setContent(e.target.value),maxLength:2000,className:\"textarea-field\"}),/*#__PURE__*/_jsxs(\"small\",{className:\"char-counter\",children:[content.length,\"/2000\"]}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"tags\",className:\"input-label\",children:\"Tags (comma-separated)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"tags\",type:\"text\",placeholder:\"Tags (comma-separated)\",value:tags,onChange:e=>setTags(e.target.value),className:\"input-field\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"submit-button\",children:loading?\"Processing...\":selectedNote?\"Update Note\":\"Add Note\"})]});}export default NoteForm;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","NoteForm","_ref","addNote","updateNote","selectedNote","title","setTitle","content","setContent","tags","setTags","loading","setLoading","success","setSuccess","error","setError","join","resetForm","handleTitleChange","e","target","value","length","handleContentChange","formData","localStorage","setItem","JSON","stringify","savedData","parse","getItem","handleSubmit","preventDefault","trim","tagsArray","split","map","tag","some","test","noteData","_id","err","setTimeout","onSubmit","className","children","htmlFor","id","type","placeholder","onChange","maxLength","disabled"],"sources":["C:/Users/Waseer/OneDrive/Desktop/Digital-note-taker/frontend/src/NoteForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction NoteForm({ addNote, updateNote, selectedNote }) {\r\n  const [title, setTitle] = useState(selectedNote ? selectedNote.title : \"\");\r\n  const [content, setContent] = useState(\r\n    selectedNote ? selectedNote.content : \"\"\r\n  );\r\n  const [tags, setTags] = useState(selectedNote ? selectedNote.tags : \"\");\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n  const [success, setSuccess] = useState(\"\"); // Success message state\r\n  const [error, setError] = useState(\"\"); // Error message state\r\n\r\n  useEffect(() => {\r\n    if (selectedNote) {\r\n      setTitle(selectedNote.title);\r\n      setContent(selectedNote.content);\r\n      setTags(selectedNote.tags.join(\", \"));\r\n    } else {\r\n      resetForm();\r\n    }\r\n  }, [selectedNote]);\r\n\r\n  const handleTitleChange = (e) => {\r\n    if (e.target.value.length <= 50) setTitle(e.target.value); // Limit to 50 characters\r\n  };\r\n\r\n  const handleContentChange = (e) => {\r\n    if (e.target.value.length <= 200) setContent(e.target.value); // Limit to 200 characters\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setTags(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const formData = { title, content, tags };\r\n    localStorage.setItem(\"noteData\", JSON.stringify(formData));\r\n  }, [title, content, tags]);\r\n\r\n  // Load from local storage on mount\r\n  useEffect(() => {\r\n    const savedData = JSON.parse(localStorage.getItem(\"noteData\"));\r\n    if (savedData) {\r\n      setTitle(savedData.title);\r\n      setContent(savedData.content);\r\n      setTags(savedData.tags);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation: Check if title is empty\r\n    if (!title.trim()) {\r\n      setError(\"Title cannot be empty!\");\r\n      return;\r\n    }\r\n\r\n    // Validation: Check if tags contain only letters and numbers\r\n    const tagsArray = tags.split(\",\").map((tag) => tag.trim());\r\n    if (tagsArray.some((tag) => !/^[a-zA-Z0-9]+$/.test(tag))) {\r\n      setError(\"Tags must contain only letters and numbers.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\"); // Clear any previous error messages\r\n    setLoading(true); // Start loading state\r\n\r\n    const noteData = {\r\n      title,\r\n      content,\r\n      tags: tagsArray,\r\n    };\r\n\r\n    try {\r\n      if (selectedNote) {\r\n        await updateNote(selectedNote._id, noteData); // Assume updateNote returns a promise\r\n        setSuccess(\"Note updated successfully!\");\r\n      } else {\r\n        await addNote(noteData); // Assume addNote returns a promise\r\n        setSuccess(\"Note added successfully!\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to save the note. Please try again.\"); // Error handling\r\n    } finally {\r\n      setLoading(false); // Stop loading state\r\n      setTimeout(() => setSuccess(\"\"), 3000); // Clear success message after 3 seconds\r\n      resetForm(); // Clear form\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"note-form\">\r\n      <h2 className=\"form-title\">{selectedNote ? \"Edit Note\" : \"Add Note\"}</h2>\r\n\r\n      {success && <p className=\"success-message\">{success}</p>}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"title\" className=\"input-label\">\r\n          Title\r\n        </label>\r\n        <input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          maxLength={50}\r\n          className=\"input-field\"\r\n        />\r\n        <small className=\"char-counter\">{title.length}/50</small>{\" \"}\r\n        {/* Character counter */}\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"content\" className=\"input-label\">\r\n          Content\r\n        </label>\r\n        <textarea\r\n          id=\"content\"\r\n          placeholder=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          maxLength={2000}\r\n          className=\"textarea-field\"\r\n        ></textarea>\r\n        <small className=\"char-counter\">{content.length}/2000</small>{\" \"}\r\n        {/* Character counter */}\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"tags\" className=\"input-label\">\r\n          Tags (comma-separated)\r\n        </label>\r\n        <input\r\n          id=\"tags\"\r\n          type=\"text\"\r\n          placeholder=\"Tags (comma-separated)\"\r\n          value={tags}\r\n          onChange={(e) => setTags(e.target.value)}\r\n          className=\"input-field\"\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" disabled={loading} className=\"submit-button\">\r\n        {loading ? \"Processing...\" : selectedNote ? \"Update Note\" : \"Add Note\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nexport default NoteForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}